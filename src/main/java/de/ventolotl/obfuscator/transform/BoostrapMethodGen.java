package de.ventolotl.obfuscator.transform;

import org.objectweb.asm.Label;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.tree.MethodNode;

public final class BoostrapMethodGen implements Opcodes {
  private static final int ACCESS = ACC_STATIC | ACC_PRIVATE;
  static final String BSM_DESC = "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;";

  public static MethodNode boostrapMethodOf(String name) {
    MethodNode method = new MethodNode(ACCESS, name, BSM_DESC, null, null);
    Label label0 = new Label();
    method.visitLabel(label0);
    method.visitLineNumber(36, label0);
    method.visitVarInsn(ALOAD, 3);
    method.visitLdcInsn(";;");
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;", false);
    method.visitVarInsn(ASTORE, 4);
    Label label1 = new Label();
    method.visitLabel(label1);
    method.visitLineNumber(37, label1);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_3);
    method.visitInsn(AALOAD);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/ClassLoader", "getSystemClassLoader", "()Ljava/lang/ClassLoader;", false);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/invoke/MethodType", "fromMethodDescriptorString", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/invoke/MethodType;", false);
    method.visitVarInsn(ASTORE, 5);
    Label label2 = new Label();
    method.visitLabel(label2);
    method.visitLineNumber(39, label2);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_0);
    method.visitInsn(AALOAD);
    method.visitVarInsn(ASTORE, 6);
    method.visitInsn(ICONST_M1);
    method.visitVarInsn(ISTORE, 7);
    method.visitVarInsn(ALOAD, 6);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "hashCode", "()I", false);
    Label label3 = new Label();
    Label label4 = new Label();
    Label label5 = new Label();
    Label label6 = new Label();
    method.visitTableSwitchInsn(48, 50, label6, label3, label4, label5);
    method.visitLabel(label3);
    method.visitFrame(Opcodes.F_FULL, 8, new Object[]{"java/lang/invoke/MethodHandles$Lookup", "java/lang/String", "java/lang/invoke/MethodType", "java/lang/String", "[Ljava/lang/String;", "java/lang/invoke/MethodType", "java/lang/String", Opcodes.INTEGER}, 0, new Object[]{});
    method.visitVarInsn(ALOAD, 6);
    method.visitLdcInsn("0");
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
    method.visitJumpInsn(IFEQ, label6);
    method.visitInsn(ICONST_0);
    method.visitVarInsn(ISTORE, 7);
    method.visitJumpInsn(GOTO, label6);
    method.visitLabel(label4);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ALOAD, 6);
    method.visitLdcInsn("1");
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
    method.visitJumpInsn(IFEQ, label6);
    method.visitInsn(ICONST_1);
    method.visitVarInsn(ISTORE, 7);
    method.visitJumpInsn(GOTO, label6);
    method.visitLabel(label5);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ALOAD, 6);
    method.visitLdcInsn("2");
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
    method.visitJumpInsn(IFEQ, label6);
    method.visitInsn(ICONST_2);
    method.visitVarInsn(ISTORE, 7);
    method.visitLabel(label6);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ILOAD, 7);
    Label label7 = new Label();
    Label label8 = new Label();
    Label label9 = new Label();
    Label label10 = new Label();
    method.visitTableSwitchInsn(0, 2, label10, label7, label8, label9);
    method.visitLabel(label7);
    method.visitLineNumber(43, label7);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ALOAD, 0);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_1);
    method.visitInsn(AALOAD);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_2);
    method.visitInsn(AALOAD);
    method.visitVarInsn(ALOAD, 5);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandles$Lookup", "findStatic", "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitVarInsn(ASTORE, 8);
    Label label11 = new Label();
    method.visitLabel(label11);
    method.visitLineNumber(44, label11);
    method.visitTypeInsn(NEW, "java/lang/invoke/ConstantCallSite");
    method.visitInsn(DUP);
    method.visitVarInsn(ALOAD, 8);
    method.visitVarInsn(ALOAD, 2);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandle", "asType", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitMethodInsn(INVOKESPECIAL, "java/lang/invoke/ConstantCallSite", "<init>", "(Ljava/lang/invoke/MethodHandle;)V", false);
    method.visitInsn(ARETURN);
    method.visitLabel(label8);
    method.visitLineNumber(49, label8);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ALOAD, 0);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_1);
    method.visitInsn(AALOAD);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_2);
    method.visitInsn(AALOAD);
    method.visitVarInsn(ALOAD, 5);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandles$Lookup", "findVirtual", "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitVarInsn(ASTORE, 8);
    Label label12 = new Label();
    method.visitLabel(label12);
    method.visitLineNumber(50, label12);
    method.visitTypeInsn(NEW, "java/lang/invoke/ConstantCallSite");
    method.visitInsn(DUP);
    method.visitVarInsn(ALOAD, 8);
    method.visitVarInsn(ALOAD, 2);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandle", "asType", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitMethodInsn(INVOKESPECIAL, "java/lang/invoke/ConstantCallSite", "<init>", "(Ljava/lang/invoke/MethodHandle;)V", false);
    method.visitInsn(ARETURN);
    method.visitLabel(label9);
    method.visitLineNumber(55, label9);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitVarInsn(ALOAD, 0);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_1);
    method.visitInsn(AALOAD);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_2);
    method.visitInsn(AALOAD);
    method.visitVarInsn(ALOAD, 5);
    method.visitVarInsn(ALOAD, 4);
    method.visitInsn(ICONST_4);
    method.visitInsn(AALOAD);
    method.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandles$Lookup", "findSpecial", "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitVarInsn(ASTORE, 8);
    Label label13 = new Label();
    method.visitLabel(label13);
    method.visitLineNumber(56, label13);
    method.visitTypeInsn(NEW, "java/lang/invoke/ConstantCallSite");
    method.visitInsn(DUP);
    method.visitVarInsn(ALOAD, 8);
    method.visitVarInsn(ALOAD, 2);
    method.visitMethodInsn(INVOKEVIRTUAL, "java/lang/invoke/MethodHandle", "asType", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", false);
    method.visitMethodInsn(INVOKESPECIAL, "java/lang/invoke/ConstantCallSite", "<init>", "(Ljava/lang/invoke/MethodHandle;)V", false);
    method.visitInsn(ARETURN);
    method.visitLabel(label10);
    method.visitLineNumber(59, label10);
    method.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
    method.visitInsn(ACONST_NULL);
    method.visitInsn(ARETURN);
    Label label14 = new Label();
    method.visitLabel(label14);
    method.visitMaxs(6, 9);
    method.visitEnd();
    return method;
  }
}